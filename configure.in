# require autoconf 2.52
AC_PREREQ(2.52)

AC_INIT(gnomine)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-games, 1.91.0)

AC_PROG_INTLTOOL

AM_MAINTAINER_MODE


SCROLLKEEPER_REQUIRED=0.1.4
AC_SUBST(SCROLLKEEPER_REQUIRED)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AM_PROG_LIBTOOL

GAMES_CHECK_CXX

GAMES_CHECK_GUILE

LIBGNOMEUI_REQUIRED=1.105.0
LIBGNOME_REQUIRED=1.105.0


PKG_CHECK_MODULES(GNOME_GAMES, libgnome-2.0 >= $LIBGNOME_REQUIRED libgnomeui-2.0 >= $LIBGNOMEUI_REQUIRED gconf-2.0 >= 1.1.5 gnome-vfs-module-2.0 >= 1.9.11)
AC_SUBST(GNOME_GAMES_CFLAGS)
AC_SUBST(GNOME_GAMES_LIBS)

## look for some version of curses (keeping AM_'s out of curses.m4)
AC_CHECK_CURSES
AM_CONDITIONAL(HAS_CURSES, test "$has_curses" = true)

GETTEXT_PACKAGE=gnome-games
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE,"$GETTEXT_PACKAGE")
ALL_LINGUAS="ca cs da de el en_GB es et fi fr ga gl hu it ja ko lt nl nn no pl pt pt_BR ro ru sk sl sv tr uk wa zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AM_CONDITIONAL(HAVE_JADE, false)

gnome_cv_use_gnome=yes

dnl Specify the gconf configuration source,
dnl default to xml::$(sysconfdir)/gconf/gconf.xml.defaults

GCONF_CONFIG_SOURCE=

AC_ARG_ENABLE(gconf-source, [  --enable-gconf-source=sourceaddress Where to install schema files.], GCONF_CONFIG_SOURCE=$enable_gconf_source,)

if test "x$GCONF_CONFIG_SOURCE" = "x"; then
	GCONF_CONFIG_SOURCE="xml::\${sysconfdir}/gconf/gconf.xml.defaults"
fi

AC_SUBST(GCONF_CONFIG_SOURCE)
AC_SUBST(INSTALL_GCONF_CONFIG_SOURCE)

AC_PATH_PROG(GCONFTOOL, gconftool-2)

## Begin tests for scrollkeeper
AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config, please install the scrollkeeper packaga)
fi

## Test whether jw is installed
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)

AC_CHECK_FUNCS(rename)

sys_dir_h_found=no
old_CPPFLAGS="$CPPFLAGS"
UCB_CFLAGS=
AC_CHECK_HEADER(sys/dir.h, [sys_dir_h_found=yes],
  [AC_MSG_CHECKING([for sys/dir.h in /usr/ucbinclude])
   CPPFLAGS="-I /usr/ucbinclude"
   AC_TRY_COMPILE([#include <sys/dir.h>],
     [scandir(".", 0, 0, 0);],
     [UCB_CFLAGS="-I/usr/ucbinclude"
      AC_MSG_RESULT(yes)
      sys_dir_h_found=yes
     ],
     AC_MSG_RESULT(no))
  ])
AC_SUBST(UCB_CFLAGS)

if test x$sys_dir_h_found = xyes; then
  AC_DEFINE(HAVE_SYS_DIR_H)
  AC_MSG_CHECKING([if sys/dir.h defines struct direct or dirent])
  AC_TRY_COMPILE([#include <sys/dir.h>],
    [struct direct *dummy;],
    [AC_MSG_RESULT(direct)
     AC_DEFINE(HAVE_STRUCT_DIRECT)
    ],
    [AC_TRY_COMPILE([#include <sys/dir.h>],
     [struct dirent *dummy;],
     [AC_MSG_RESULT(dirent)]
     [AC_MSG_RESULT(none)])
    ])
fi
CPPFLAGS="$old_CPPFLAGS"

old_LDFLAGS="$LDFLAGS"
UCB_LDFLAGS=
AC_CHECK_FUNC(scandir, [], [
  LDFLAGS="$LDFLAGS -L/usr/ucblib"
  AC_CHECK_LIB(ucb, scandir,
    [UCB_LDFLAGS="-L/usr/ucblib -lucb"],
    AC_MSG_ERROR([No implementation of scandir found])
  )
])
LDFLAGS="$old_LDFLAGS"
AC_SUBST(UCB_LDFLAGS)

AC_DEFINE_UNQUOTED(GNOME_ICONDIR, "${prefix}/share/pixmaps")

AC_OUTPUT([
gnome-games.spec
Makefile
po/Makefile.in
libgames-support/Makefile
gnect/Makefile
gnect/src/Makefile
gnect/data/Makefile
gnect/pixmaps/Makefile
gnect/help/Makefile
gnect/help/C/Makefile
gnomine/Makefile
gnomine/help/Makefile
gnomine/help/C/Makefile
gnome-stones/Makefile
gnome-stones/graphics/Makefile
gnome-stones/objects/Makefile
gnome-stones/sounds/Makefile
gnome-stones/help/Makefile
gnome-stones/help/C/Makefile
gnome-stones/help/it/Makefile
same-gnome/Makefile
same-gnome/help/Makefile
same-gnome/help/C/Makefile
same-gnome/help/es/Makefile
same-gnome/help/ru/Makefile
mahjongg/Makefile
mahjongg/help/Makefile
mahjongg/help/C/Makefile
mahjongg/help/it/Makefile
gtali/Makefile
gtali/pix/Makefile
gtali/help/Makefile
gtali/help/C/Makefile
gtali/help/da/Makefile
gnobots2/Makefile
gnobots2/help/Makefile
gnobots2/help/C/Makefile
gnobots2/help/es/Makefile
gnobots2/help/it/Makefile
gnobots2/help/da/Makefile
iagno/Makefile
iagno/sounds/Makefile
iagno/help/Makefile
iagno/help/C/Makefile
iagno/help/it/Makefile
gataxx/Makefile
gataxx/sounds/Makefile
gataxx/help/Makefile
gataxx/help/C/Makefile
gataxx/help/es/Makefile
gataxx/help/it/Makefile
gnotravex/Makefile
gnotravex/help/Makefile
gnotravex/help/C/Makefile
gnotravex/help/es/Makefile
gnotski/Makefile
gnibbles/Makefile
gnibbles/help/Makefile
gnibbles/help/C/Makefile
gnibbles/sounds/Makefile
glines/Makefile
glines/help/Makefile
glines/help/C/Makefile
glines/help/it/Makefile
freecell/Makefile
freecell/src/Makefile
freecell/gdk-card-image/Makefile
gnometris/Makefile
gnometris/pix/Makefile
xbill/Makefile
xbill/help/Makefile
xbill/help/C/Makefile
xbill/pixmaps/Makefile
xbill/cursors/Makefile
aisleriot/Makefile
aisleriot/docs/Makefile
aisleriot/docs/it/Makefile
aisleriot/help/Makefile
aisleriot/help/C/Makefile
aisleriot/pixmaps/Makefile
omf-install/Makefile 
])
## iagno2/Makefile
## iagno2/reversi-iagno2/Makefile
## iagno2/plugins/Makefile
## iagno2/plugins/random/Makefile
## iagno2/plugins/swedishchef/Makefile
## iagno2/src/Makefile
## iagno2/tiles/Makefile

echo "
Configuration:

	Source code location:	  	   ${srcdir}
	Compiler:		  	   ${CC}

	Compile Gnometris and Xbill
	(Have c++ compiler):		   ${ac_cv_prog_cxx_works}
	Compile AisleRiot (Have guile):	   ${ac_cv_guile_found}
"

